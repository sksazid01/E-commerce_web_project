{"version":3,"sources":["../src/webpack-builder.js"],"names":[],"mappings":"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","file":"webpack-builder.js","sourcesContent":["import R from 'ramda';\nimport Promise from 'bluebird';\nimport webpack from 'webpack';\nimport fs from 'fs-extra';\nimport fsPath from 'path';\nimport { closestModulePath } from './paths';\n\nexport const BUILD_PATH = fsPath.resolve('./.build/webpack');\nconst NODE_MODULES_PATH = fsPath.resolve('./node_modules');\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production';\n\n\nconst modulePath = (moduleName) => closestModulePath(fsPath.resolve('.'), moduleName);\n\n\nconst SETTINGS = {\n  resolveLoader: { fallback: NODE_MODULES_PATH },\n  resolve: {\n    fallback: NODE_MODULES_PATH,\n    extensions: ['', '.js', '.jsx', 'json'],\n    alias: {\n      react: modulePath('react'),\n      ramda: modulePath('ramda'),\n    },\n  },\n  module: {\n    loaders: [\n      // ES6/JSX.\n      { test: /\\.js$/, exclude: /(node_modules)/, loader: 'babel' },\n      { test: /\\.jsx$/, exclude: /(node_modules)/, loader: 'babel' },\n      { test: /\\.json$/, loader: 'json' },\n    ],\n  },\n};\n\n\nconst getSettings = (entry, output, options = {}) => {\n  const config = R.merge(R.clone(SETTINGS), {\n    entry,\n    output: {\n      filename: fsPath.basename(output),\n      path: fsPath.dirname(output),\n    },\n  });\n  if (options.minify) {\n    config.plugins = [new webpack.optimize.UglifyJsPlugin({ minimize: true })];\n  }\n  if (options.loaders) {\n    config.module.loaders = options.loaders;\n  }\n  return config;\n};\n\n\n\nconst shortenError = (error) => {\n  if (error.name === 'ModuleBuildError') {\n    const index = error.message.indexOf('    at ');\n    if (index > -1) {\n      error.message = error.message.substr(0, index);\n    }\n  }\n};\n\n\n\nconst compile = (entryPath, outputPath, loaders) => {\n  const minify = IS_PRODUCTION;\n  const config = getSettings(entryPath, outputPath, { minify, loaders });\n  return new Promise((resolve, reject) => {\n    webpack(config, (err, result) => {\n      if (err) {\n        reject({ errors: [err] });\n      } else {\n        const errors = result.compilation.errors;\n        if (errors.length > 0) {\n          errors.forEach(error => shortenError(error));\n          reject({ errors });\n        } else {\n          const elapsed = result.endTime - result.startTime;\n          const stats = fs.lstatSync(outputPath);\n          resolve({ elapsed, fileSize: stats.size });\n        }\n      }\n    });\n  });\n};\n\n\n\n/**\n * Builder API.\n * @param {Object} settings:\n *            - paths:          {Object} of paths to known folders.\n *            - routes:         {Object} of routes.\n *            - loaders:        {Array} of webpack loaders to use.\n *                              Default loaders are replaced with this array.\n *\n */\nexport default (settings = {}) => {\n  const { paths, routes } = settings;\n\n  // Build the list of paths to compile.\n  const items = [];\n  const add = (entry, outputFile) => {\n    items.push({\n      entry,\n      output: `${ BUILD_PATH }/${ outputFile }`,\n    });\n  };\n  add(`${ paths.scripts }/index.js`, 'base.js');\n  R.values(routes).forEach(item => {\n    const entry = `${ paths.pages }/${ item.page }/${ item.entry || 'entry.js' }`;\n    if (fs.existsSync(entry)) {\n      add(entry, `pages/${ item.page }.js`);\n    }\n  });\n\n  return new Promise((resolve, reject) => {\n    // Run each item through the webpack compiler.\n    const response = { files: [] };\n    const compileItem = (index) => {\n      if (index < items.length) {\n        const item = items[index];\n        if (fs.existsSync(item.entry)) {\n          compile(item.entry, item.output, settings.loaders)\n          .then(result => {\n            response.files.push({\n              path: item.entry.replace(paths.base, ''),\n              elapsed: result.elapsed,\n              fileSize: result.fileSize,\n            });\n            compileItem(index + 1); // <== RECURSION.\n          })\n          .catch(err => reject(err));\n        }\n      } else {\n        // Complete.\n        const sumElapsed = (result, item) => result + item.elapsed;\n        response.elapsed = R.reduce(sumElapsed, 0, response.files);\n        resolve(response);\n      }\n    };\n    compileItem(0);\n  });\n};\n"]}