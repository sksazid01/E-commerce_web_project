'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ramda = require('ramda');

var _ramda2 = _interopRequireDefault(_ramda);

var _util = require('./util');

var util = _interopRequireWildcard(_util);

var _cacheManager = require('cache-manager');

var _cacheManager2 = _interopRequireDefault(_cacheManager);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var memoryCache = _cacheManager2.default.caching({
  store: 'memory',
  max: 100,
  ttl: 60 * 60 * 2 });

// Time to live: seconds => 2-hours.
var getKey = function getKey(paths, options) {
  var asStrings = _ramda2.default.pipe(_ramda2.default.values, _ramda2.default.map(_ramda2.default.toString), _ramda2.default.reject(_ramda2.default.isNil));
  return util.hash(paths, asStrings(options));
};

/**
 * Top level cache of compiled CSS.
 */
exports.default = {
  key: getKey,
  keys: function keys() {
    return memoryCache.keys();
  },
  value: function value(key, _value) {
    if (_value === null) {
      memoryCache.del(key);
    }
    if (_value !== undefined) {
      memoryCache.set(key, _value);
    }
    return memoryCache.get(key);
  },
  remove: function remove(key) {
    this.value(key, null);
  },
  clear: function clear() {
    memoryCache.reset();
  }
};
//# sourceMappingURL=cache.js.map