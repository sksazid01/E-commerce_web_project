{"ast":null,"code":"var _jsxFileName = \"/home/sk-sazid/Downloads/466-ECommerce-main (2)/frontend/client/src/views/User/UserBank.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerBankUser, findBankUser } from '../../actions/userAction_Bank';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserBank() {\n  _s();\n\n  const [bankUID, setbankUID] = useState('');\n  const [secretKey, setsecretKey] = useState('');\n  const dispatch = useDispatch();\n  const {\n    loadingy,\n    successy\n  } = useSelector(state => state.registerUserBankReducer);\n  const userState = useSelector(state => state.loginUserReducer);\n  const {\n    currentUser\n  } = userState;\n\n  const delay = ms => new Promise(res => setTimeout(res, ms));\n\n  const notify = (callId, msg, timex) => {\n    if (callId === '') {\n      return toast.error(msg, {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: timex\n      });\n    }\n\n    if (callId === 'reg') {\n      toast.success(msg, {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: timex\n      });\n    }\n\n    if (callId === 'info') {\n      toast.info(msg, {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: timex\n      });\n    }\n  };\n\n  function bankRegWithUser() {\n    if (!bankUID || !secretKey) {\n      if (bankUID.length < 10) {\n        setbankUID('');\n      }\n\n      return notify('', \"BankUID length should be 10\", 1500);\n    }\n\n    const userID = {\n      bankUID,\n      email: currentUser.email,\n      password: secretKey\n    }; //console.log(\"BANK INFO :\",userID);\n\n    notify('info', \"your Email: \" + currentUser.email + \" will be used \", 2000);\n    dispatch(registerBankUser(userID));\n    dispatch(findBankUser(currentUser.email));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n      limit: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-5 shadow-lg p-3 mb-5 bg-white rounded \",\n        id: \"uReginputHolder\",\n        validate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"html_banner\", {\n          className: \"text-center\",\n          children: \" Bank UID Registration \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [loadingy && !successy && /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"load_hold\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"dots-bars-3\",\n              children: \"  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), successy && !loadingy && notify('reg', \"BankUID Verification Successful,\", 1520), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: 'BankUID',\n            placeholder: \"Bank User Identification No.\",\n            className: \"form-control\",\n            value: bankUID,\n            onChange: e => setbankUID(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: 'password',\n            placeholder: \"Password\",\n            className: \"form-control\",\n            value: secretKey,\n            onChange: e => setsecretKey(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn registerButton mt-3\",\n            onClick: bankRegWithUser,\n            children: \"Proceed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"clause_for_user\",\n      children: \" We need bank details from you to proceed with your orders and payment in future  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"clause_for_user2\",\n      children: [\" you'll be using \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 53\n      }, this), \" : \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: currentUser.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 68\n      }, this), \" to open this bank account\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_s(UserBank, \"cWx2DRRyxyhYcPFgyyhByeHrxU4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UserBank;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserBank\");","map":{"version":3,"sources":["/home/sk-sazid/Downloads/466-ECommerce-main (2)/frontend/client/src/views/User/UserBank.js"],"names":["React","useState","useEffect","ToastContainer","toast","useDispatch","useSelector","registerBankUser","findBankUser","UserBank","bankUID","setbankUID","secretKey","setsecretKey","dispatch","loadingy","successy","state","registerUserBankReducer","userState","loginUserReducer","currentUser","delay","ms","Promise","res","setTimeout","notify","callId","msg","timex","error","position","POSITION","TOP_CENTER","autoClose","success","info","TOP_RIGHT","bankRegWithUser","length","userID","email","password","e","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch,useSelector } from 'react-redux';\n\nimport { registerBankUser,findBankUser } from '../../actions/userAction_Bank';\n\nexport default function UserBank() {\n  \n    const [bankUID,setbankUID]=useState('');\n    const [secretKey,setsecretKey]=useState('');\n    const dispatch=useDispatch()\n\n    const {loadingy,successy}= useSelector( state=>state.registerUserBankReducer) ;\n\n    const userState = useSelector(state=>state.loginUserReducer)\n    const {currentUser}= userState\n\n    const delay = ms => new Promise(res => setTimeout(res, ms));\n    \n    const notify = (callId,msg,timex) => {\n  \n      if(callId==='' ){\n        return toast.error(msg, {position: toast.POSITION.TOP_CENTER,autoClose:timex})\n      }\n      if(callId==='reg' ){\n         toast.success(msg, {position: toast.POSITION.TOP_CENTER,autoClose:timex})\n      }\n      if(callId==='info' ){\n        toast.info(msg, {position: toast.POSITION.TOP_RIGHT,autoClose:timex})\n     }\n    }\n    \n    function bankRegWithUser(){\n        \n      if(  !bankUID   || !secretKey   ){\n        if(bankUID.length<10 ){setbankUID('')}\n        return notify('',\"BankUID length should be 10\",1500)\n      }\n       const userID={\n         bankUID, \n         email:currentUser.email, \n         password: secretKey,\n       }\n       //console.log(\"BANK INFO :\",userID);\n       notify('info',\"your Email: \"+currentUser.email+\" will be used \",2000)\n       dispatch(registerBankUser(userID))\n       dispatch(findBankUser(currentUser.email))\n       \n  }\n    return (\n      <div>\n          \n           <ToastContainer limit={1} />\n          <div className='row justify-content-center'>\n              <div className='col-md-5 shadow-lg p-3 mb-5 bg-white rounded ' id='uReginputHolder' validate>\n  \n                  <html_banner className=\"text-center\"> Bank UID Registration </html_banner>\n                  <div>\n                      { \n                        loadingy && !successy && \n                        <div class=\"load_hold\" > <div class=\"dots-bars-3\">  </div></div>\n                      }\n                      {\n                         successy && !loadingy && (notify('reg',\"BankUID Verification Successful,\",1520) )\n                         \n                      }\n                     <input type={'BankUID'} placeholder=\"Bank User Identification No.\" className='form-control'\n                      value={bankUID}  onChange={(e)=>setbankUID(e.target.value)} required/>\n                     <input type={'password'} placeholder=\"Password\" className='form-control' \n                      value={secretKey}  onChange={(e)=>setsecretKey(e.target.value)} required/>\n                    \n                     <button type=\"button\" className='btn registerButton mt-3'\n                     onClick={ bankRegWithUser }\n                     >Proceed</button>\n                  </div>\n  \n              </div>\n              {/* <a href='/register' id='clicktoLog'> <b>New</b> User ? Create an Account! </a> */}\n          </div>\n          <p id=\"clause_for_user\"> We need bank details from you to proceed with your orders and payment in future  </p>\n          <p id=\"clause_for_user2\"> you'll be using <b>Email</b> : <b>{currentUser.email}</b> to open this bank account</p>\n\n      </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}