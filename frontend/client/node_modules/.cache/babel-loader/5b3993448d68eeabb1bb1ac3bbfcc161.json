{"ast":null,"code":"import axios from 'axios';\n\nconst delay = ms => new Promise(res => setTimeout(res, ms));\n\nexport const registerBankUser = user => async dispatch => {\n  dispatch({\n    type: 'USER_REGISTER_BANK_REQUEST'\n  });\n\n  try {\n    const response = await axios.post('/bankAPI/users/register', user);\n    console.log('BANK userAction: ', response);\n    dispatch({\n      type: 'USER_REGISTER_BANK_SUCCESS'\n    });\n    window.location.href = '/uidCheck';\n  } catch (error) {\n    console.log(\"USER ACTION ERROR\", error);\n    dispatch({\n      type: 'USER_REGISTER_BANK_FAILED',\n      payload: error\n    });\n  }\n};\nexport const findBankUser = user => async dispatch => {\n  dispatch({\n    type: 'USER_FIND_BANK_REQUEST'\n  });\n\n  try {\n    // console.log('FRONTEND  getUID : ',user)\n    const response = await axios.get('/bankAPI/users/getUID', {\n      params: {\n        user: user\n      }\n    });\n    console.log('BANK getUID : ', response.data);\n\n    if (response.data) {\n      dispatch({\n        type: 'USER_FIND_BANK_SUCCESS'\n      });\n      localStorage.setItem('currentUserUID', JSON.stringify(response.data));\n      await delay(2500);\n      window.location.href = '/';\n    } else {\n      dispatch({\n        type: 'USER_FIND_BANK_FAILED',\n        payload: response\n      });\n      await delay(2500);\n      window.location.href = '/registerUID';\n    }\n  } catch (error) {\n    dispatch({\n      type: 'USER_FIND_BANK_FAILED',\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["/home/sk-sazid/Downloads/466-ECommerce-main (2)/frontend/client/src/actions/userAction_Bank.js"],"names":["axios","delay","ms","Promise","res","setTimeout","registerBankUser","user","dispatch","type","response","post","console","log","window","location","href","error","payload","findBankUser","get","params","data","localStorage","setItem","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,GAAG,IAAIC,UAAU,CAACD,GAAD,EAAMF,EAAN,CAA7B,CAApB;;AAEA,OAAO,MAAMI,gBAAgB,GAAEC,IAAD,IAAQ,MAAMC,QAAN,IAAgB;AAElDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAD,CAAR;;AAEA,MAAG;AACC,UAAMC,QAAQ,GAAC,MAAMV,KAAK,CAACW,IAAN,CAAW,yBAAX,EAAsCJ,IAAtC,CAArB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCH,QAAhC;AACAF,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAR;AACAK,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,WAArB;AACH,GALD,CAMA,OAAMC,KAAN,EAAY;AACRL,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCI,KAAjC;AACAT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,2BAAN;AAAkCS,MAAAA,OAAO,EAAED;AAA3C,KAAD,CAAR;AACH;AACJ,CAdM;AAeP,OAAO,MAAME,YAAY,GAAEZ,IAAD,IAAQ,MAAMC,QAAN,IAAgB;AAE9CA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAD,CAAR;;AAEA,MAAG;AACC;AACA,UAAMC,QAAQ,GAAC,MAAMV,KAAK,CAACoB,GAAN,CAAU,uBAAV,EAAmC;AAACC,MAAAA,MAAM,EAAE;AAACd,QAAAA,IAAI,EAAEA;AAAP;AAAT,KAAnC,CAArB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BH,QAAQ,CAACY,IAAtC;;AACA,QAAGZ,QAAQ,CAACY,IAAZ,EAAkB;AACjBd,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAR;AACAc,MAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAsCC,IAAI,CAACC,SAAL,CAAehB,QAAQ,CAACY,IAAxB,CAAtC;AACA,YAAMrB,KAAK,CAAC,IAAD,CAAX;AACAa,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACA,KALD,MAMK;AACDR,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAC,uBAAN;AAA8BS,QAAAA,OAAO,EAAER;AAAvC,OAAD,CAAR;AACA,YAAMT,KAAK,CAAC,IAAD,CAAX;AACAa,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,cAArB;AACH;AACJ,GAfD,CAgBA,OAAMC,KAAN,EAAY;AACRT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,uBAAN;AAA8BS,MAAAA,OAAO,EAAED;AAAvC,KAAD,CAAR;AACH;AACJ,CAvBM","sourcesContent":["import axios from 'axios'\nconst delay = ms => new Promise(res => setTimeout(res, ms));\n\nexport const registerBankUser=(user)=>async dispatch=>{\n\n    dispatch({type:'USER_REGISTER_BANK_REQUEST'})\n    \n    try{\n        const response=await axios.post('/bankAPI/users/register', user)\n        console.log('BANK userAction: ',response)\n        dispatch({type:'USER_REGISTER_BANK_SUCCESS'})\n        window.location.href='/uidCheck';\n    }\n    catch(error){\n        console.log(\"USER ACTION ERROR\", error);\n        dispatch({type:'USER_REGISTER_BANK_FAILED',payload: error})\n    }\n}\nexport const findBankUser=(user)=>async dispatch=>{\n\n    dispatch({type:'USER_FIND_BANK_REQUEST'})\n\n    try{\n        // console.log('FRONTEND  getUID : ',user)\n        const response=await axios.get('/bankAPI/users/getUID', {params: {user: user}})\n        console.log('BANK getUID : ',response.data)\n        if(response.data ){\n         dispatch({type:'USER_FIND_BANK_SUCCESS'})\n         localStorage.setItem('currentUserUID',JSON.stringify(response.data))\n         await delay(2500);\n         window.location.href='/'\n        }\n        else { \n            dispatch({type:'USER_FIND_BANK_FAILED',payload: response})\n            await delay(2500);\n            window.location.href='/registerUID'\n        }\n    }\n    catch(error){\n        dispatch({type:'USER_FIND_BANK_FAILED',payload: error})\n    }\n}\n"]},"metadata":{},"sourceType":"module"}