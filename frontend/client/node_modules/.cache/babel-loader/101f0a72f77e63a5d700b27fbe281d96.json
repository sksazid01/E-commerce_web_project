{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { getAllProductsReducer, addNewProductsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducer';\nimport { registerUserReducer, loginUserReducer } from './reducers/userReducer';\nimport { registerUserBankReducer } from './reducers/userReducer_Bank';\nimport { placeOrderReducer, getUserOrdersReducer } from './reducers/orderReducers';\nimport { verifyAdminReducer, getAllOrdersReducer, verifyAOrderReducer } from './reducers/adminReducer';\nconst finalReducer = combineReducers({\n  getAllProductsReducer: getAllProductsReducer,\n  cartReducer: cartReducer,\n  registerUserReducer: registerUserReducer,\n  loginUserReducer: loginUserReducer,\n  registerUserBankReducer: registerUserBankReducer,\n  placeOrderReducer: placeOrderReducer,\n  getUserOrdersReducer: getUserOrdersReducer,\n  verifyAdminReducer: verifyAdminReducer,\n  getAllOrdersReducer: getAllOrdersReducer,\n  verifyAOrderReducer: verifyAOrderReducer,\n  addNewProductsReducer: addNewProductsReducer\n});\nconst cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst currentUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null;\nconst currentAdmin = localStorage.getItem('currentAdmin') ? JSON.parse(localStorage.getItem('currentAdmin')) : null;\nconsole.log(JSON.stringify(cartItems));\nconst initialState = {\n  cartReducer: {\n    cartItems: cartItems\n  },\n  loginUserReducer: {\n    currentUser: currentUser\n  },\n  verifyAdminReducer: {\n    currentAdmin: currentAdmin\n  }\n};\nconst composeEnhancers = composeWithDevTools({});\nconst store = createStore(finalReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/home/sk-sazid/Downloads/Web Project/frontend/client/src/store.js"],"names":["combineReducers","createStore","applyMiddleware","composeWithDevTools","thunk","getAllProductsReducer","addNewProductsReducer","cartReducer","registerUserReducer","loginUserReducer","registerUserBankReducer","placeOrderReducer","getUserOrdersReducer","verifyAdminReducer","getAllOrdersReducer","verifyAOrderReducer","finalReducer","cartItems","localStorage","getItem","JSON","parse","currentUser","currentAdmin","console","log","stringify","initialState","composeEnhancers","store"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,qBAAR,EAA8BC,qBAA9B,QAA0D,4BAA1D;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,mBAAT,EAA6BC,gBAA7B,QAAqD,wBAArD;AACA,SAASC,uBAAT,QAAwC,6BAAxC;AACA,SAASC,iBAAT,EAA2BC,oBAA3B,QAAuD,0BAAvD;AACA,SAASC,kBAAT,EAA4BC,mBAA5B,EAAgDC,mBAAhD,QAA2E,yBAA3E;AACA,MAAMC,YAAY,GAAGhB,eAAe,CAAC;AAEjCK,EAAAA,qBAAqB,EAAGA,qBAFS;AAGjCE,EAAAA,WAAW,EAAGA,WAHmB;AAIjCC,EAAAA,mBAAmB,EAAGA,mBAJW;AAKjCC,EAAAA,gBAAgB,EAACA,gBALgB;AAMjCC,EAAAA,uBAAuB,EAAEA,uBANQ;AAOjCC,EAAAA,iBAAiB,EAACA,iBAPe;AAQjCC,EAAAA,oBAAoB,EAAEA,oBARW;AASjCC,EAAAA,kBAAkB,EAAEA,kBATa;AAUjCC,EAAAA,mBAAmB,EAAEA,mBAVY;AAWjCC,EAAAA,mBAAmB,EAAEA,mBAXY;AAYjCT,EAAAA,qBAAqB,EAAEA;AAZU,CAAD,CAApC;AAeA,MAAMW,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAtG;AACA,MAAMG,WAAW,GAACJ,YAAY,CAACC,OAAb,CAAqB,aAArB,IAAsCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAtC,GAAwF,IAA1G;AACA,MAAMI,YAAY,GAACL,YAAY,CAACC,OAAb,CAAqB,cAArB,IAAuCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAvC,GAA0F,IAA7G;AAGAK,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,SAAL,CAAeT,SAAf,CAAZ;AAEA,MAAMU,YAAY,GAAG;AAEjBpB,EAAAA,WAAW,EAAG;AACVU,IAAAA,SAAS,EAAGA;AADF,GAFG;AAKjBR,EAAAA,gBAAgB,EAAE;AACda,IAAAA,WAAW,EAAGA;AADA,GALD;AAQjBT,EAAAA,kBAAkB,EAAE;AAChBU,IAAAA,YAAY,EAAGA;AADC;AARH,CAArB;AAcA,MAAMK,gBAAgB,GAAGzB,mBAAmB,CAAC,EAAD,CAA5C;AACA,MAAM0B,KAAK,GAAE5B,WAAW,CAAEe,YAAF,EAAgBW,YAAhB,EAA+BC,gBAAgB,CAAC1B,eAAe,CAACE,KAAD,CAAhB,CAA/C,CAAxB;AAEA,eAAeyB,KAAf","sourcesContent":["import {combineReducers} from 'redux'\nimport {createStore,applyMiddleware} from 'redux'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\nimport thunk from 'redux-thunk'\nimport {getAllProductsReducer,addNewProductsReducer} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducer'\nimport { registerUserReducer,loginUserReducer } from './reducers/userReducer'\nimport { registerUserBankReducer } from './reducers/userReducer_Bank'\nimport { placeOrderReducer,getUserOrdersReducer } from './reducers/orderReducers';\nimport { verifyAdminReducer,getAllOrdersReducer,verifyAOrderReducer } from './reducers/adminReducer'\nconst finalReducer = combineReducers({\n    \n    getAllProductsReducer : getAllProductsReducer,\n    cartReducer : cartReducer,\n    registerUserReducer : registerUserReducer,\n    loginUserReducer:loginUserReducer,\n    registerUserBankReducer: registerUserBankReducer,\n    placeOrderReducer:placeOrderReducer ,\n    getUserOrdersReducer: getUserOrdersReducer,\n    verifyAdminReducer: verifyAdminReducer,\n    getAllOrdersReducer: getAllOrdersReducer,\n    verifyAOrderReducer: verifyAOrderReducer,\n    addNewProductsReducer: addNewProductsReducer,\n})\n\nconst cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\nconst currentUser=localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null\nconst currentAdmin=localStorage.getItem('currentAdmin') ? JSON.parse(localStorage.getItem('currentAdmin')) : null\n\n\nconsole.log(JSON.stringify(cartItems))\n\nconst initialState = {\n\n    cartReducer : {\n        cartItems : cartItems\n    },\n    loginUserReducer :{\n        currentUser : currentUser\n    },\n    verifyAdminReducer :{\n        currentAdmin : currentAdmin\n    }\n\n} \n\nconst composeEnhancers = composeWithDevTools({})\nconst store= createStore( finalReducer, initialState , composeEnhancers(applyMiddleware(thunk)) )\n\nexport default store \n\n\n"]},"metadata":{},"sourceType":"module"}