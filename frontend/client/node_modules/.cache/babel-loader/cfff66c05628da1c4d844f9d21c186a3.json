{"ast":null,"code":"var _jsxFileName = \"/home/sk-sazid/Downloads/466-ECommerce-main (2)/frontend/client/src/views/User/UserBank.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerBankUser, findBankUser } from '../../actions/userAction_Bank';\nimport './UserBank.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserBank() {\n  _s();\n\n  const [bankUID, setbankUID] = useState('');\n  const [secretKey, setsecretKey] = useState('');\n  const dispatch = useDispatch();\n  const {\n    loadingy,\n    successy\n  } = useSelector(state => state.registerUserBankReducer);\n  const userState = useSelector(state => state.loginUserReducer);\n  const {\n    currentUser\n  } = userState;\n\n  const notify = (callId, msg, timex) => {\n    if (callId === '') {\n      return toast.error(msg, {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: timex\n      });\n    }\n\n    if (callId === 'reg') {\n      toast.success(msg, {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: timex\n      });\n    }\n\n    if (callId === 'info') {\n      toast.info(msg, {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: timex\n      });\n    }\n  };\n\n  function bankRegWithUser() {\n    if (!bankUID || !secretKey) {\n      if (bankUID.length < 10) {\n        setbankUID('');\n      }\n\n      return notify('', \"BankUID length should be 10\", 1500);\n    }\n\n    const userID = {\n      bankUID,\n      email: currentUser.email,\n      password: secretKey\n    };\n    notify('info', \"your Email: \" + currentUser.email + \" will be used \", 2000);\n    dispatch(registerBankUser(userID));\n    dispatch(findBankUser(currentUser.email));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n      limit: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bank-container col-md-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bank-title\",\n          children: \"Bank UID Registration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [loadingy && !successy && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"load_hold\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dots-bars-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), successy && !loadingy && notify('reg', \"BankUID Verification Successful\", 1520), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Bank User Identification No.\",\n            className: \"bank-input\",\n            value: bankUID,\n            onChange: e => setbankUID(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            className: \"bank-input\",\n            value: secretKey,\n            onChange: e => setsecretKey(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"bank-button\",\n            onClick: bankRegWithUser,\n            children: \"Proceed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bank-clause\",\n      children: \"We need bank details from you to proceed with your orders and payment in future\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bank-clause\",\n      children: [\"You'll be using \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bank-email\",\n        children: [\"Email: \", currentUser.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 27\n      }, this), \" to open this bank account\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n\n_s(UserBank, \"cWx2DRRyxyhYcPFgyyhByeHrxU4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UserBank;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserBank\");","map":{"version":3,"sources":["/home/sk-sazid/Downloads/466-ECommerce-main (2)/frontend/client/src/views/User/UserBank.js"],"names":["React","useState","useEffect","ToastContainer","toast","useDispatch","useSelector","registerBankUser","findBankUser","UserBank","bankUID","setbankUID","secretKey","setsecretKey","dispatch","loadingy","successy","state","registerUserBankReducer","userState","loginUserReducer","currentUser","notify","callId","msg","timex","error","position","POSITION","TOP_CENTER","autoClose","success","info","TOP_RIGHT","bankRegWithUser","length","userID","email","password","e","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { registerBankUser,findBankUser } from '../../actions/userAction_Bank';\nimport './UserBank.css';\n\nexport default function UserBank() {\n  \n    const [bankUID,setbankUID]=useState('');\n    const [secretKey,setsecretKey]=useState('');\n    const dispatch=useDispatch()\n\n    const {loadingy,successy}= useSelector( state=>state.registerUserBankReducer) ;\n    const userState = useSelector(state=>state.loginUserReducer)\n    const {currentUser}= userState\n    \n    const notify = (callId,msg,timex) => {\n      if(callId==='' ){\n        return toast.error(msg, {position: toast.POSITION.TOP_CENTER,autoClose:timex})\n      }\n      if(callId==='reg' ){\n         toast.success(msg, {position: toast.POSITION.TOP_CENTER,autoClose:timex})\n      }\n      if(callId==='info' ){\n        toast.info(msg, {position: toast.POSITION.TOP_RIGHT,autoClose:timex})\n     }\n    }\n    \n    function bankRegWithUser(){\n        if(!bankUID || !secretKey){\n          if(bankUID.length<10){setbankUID('')}\n          return notify('',\"BankUID length should be 10\",1500)\n        }\n        const userID={\n          bankUID, \n          email:currentUser.email, \n          password: secretKey,\n        }\n        notify('info',\"your Email: \"+currentUser.email+\" will be used \",2000)\n        dispatch(registerBankUser(userID))\n        dispatch(findBankUser(currentUser.email))\n    }\n\n    return (\n      <div>\n        <ToastContainer limit={1} />\n        <div className='row justify-content-center'>\n          <div className='bank-container col-md-5'>\n            <h2 className=\"bank-title\">Bank UID Registration</h2>\n            <div>\n              {loadingy && !successy && \n                <div className=\"load_hold\">\n                  <div className=\"dots-bars-3\"></div>\n                </div>\n              }\n              {successy && !loadingy && (\n                notify('reg',\"BankUID Verification Successful\",1520)\n              )}\n              \n              <input \n                type=\"text\"\n                placeholder=\"Bank User Identification No.\"\n                className='bank-input'\n                value={bankUID}\n                onChange={(e)=>setbankUID(e.target.value)}\n                required\n              />\n              \n              <input \n                type=\"password\"\n                placeholder=\"Password\"\n                className='bank-input'\n                value={secretKey}\n                onChange={(e)=>setsecretKey(e.target.value)}\n                required\n              />\n              \n              <button \n                type=\"button\"\n                className='bank-button'\n                onClick={bankRegWithUser}\n              >\n                Proceed\n              </button>\n            </div>\n          </div>\n        </div>\n        \n        <p className=\"bank-clause\">\n          We need bank details from you to proceed with your orders and payment in future\n        </p>\n        <p className=\"bank-clause\">\n          You'll be using <span className=\"bank-email\">Email: {currentUser.email}</span> to open this bank account\n        </p>\n      </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}