{"ast":null,"code":"var _jsxFileName = \"/home/sk-sazid/Downloads/466-ECommerce-main (2)/frontend/client/src/components/Checkout/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { placeOrder } from '../../actions/orderActions';\nimport { updateBalance } from '../../actions/adminAction';\nimport { clearEntireCart } from '../../actions/cartActions';\nimport './Checkout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Checkout(_ref) {\n  _s();\n\n  let {\n    subtotal\n  } = _ref;\n  const dispatch = useDispatch();\n  const [animationState, setAnimationState] = useState('');\n  const orderState = useSelector(state => state.placeOrderReducer);\n  const userState = useSelector(state => state.loginUserReducer);\n  const {\n    currentUser\n  } = userState;\n  const {\n    loading,\n    error,\n    success\n  } = orderState;\n\n  async function tokenHandler(token) {\n    try {\n      setAnimationState('loading'); // Process the order\n\n      await dispatch(placeOrder(token, subtotal));\n      await dispatch(updateBalance(currentUser.email, subtotal, token)); // If order is successful, clear the cart\n\n      dispatch(clearEntireCart());\n      setAnimationState('success'); // Redirect after success animation\n\n      setTimeout(() => {\n        window.location.href = '/';\n      }, 2000);\n    } catch (error) {\n      console.error('Payment failed:', error);\n      setAnimationState('');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [animationState === 'loading' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-animation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), animationState === 'success' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-animation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-checkmark\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"check-icon\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon-line line-tip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon-line line-long\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon-fix\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-text\",\n          children: \"Payment Successful!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !success && !loading && /*#__PURE__*/_jsxDEV(StripeCheckout, {\n        amount: subtotal * 100,\n        shippingAddress: true,\n        token: tokenHandler,\n        currency: \"BDT\",\n        stripeKey: \"pk_test_51LJdoPD9PVEyJI4UvvDlPGKKTlwUQOYffUqygRZU8snRITH4WQoCGQwsZWEdubhMNfxplKJAlBN4Mdg6BfBMzk0g00ADD0ottW\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn_checkout\",\n          children: \"Pay Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Checkout, \"fzxcH+l6s1ur51YTIPX2nr4u5zM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/home/sk-sazid/Downloads/466-ECommerce-main (2)/frontend/client/src/components/Checkout/Checkout.js"],"names":["React","useState","StripeCheckout","useDispatch","useSelector","placeOrder","updateBalance","clearEntireCart","Checkout","subtotal","dispatch","animationState","setAnimationState","orderState","state","placeOrderReducer","userState","loginUserReducer","currentUser","loading","error","success","tokenHandler","token","email","setTimeout","window","location","href","console"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport StripeCheckout from 'react-stripe-checkout'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { placeOrder } from '../../actions/orderActions'\nimport { updateBalance } from '../../actions/adminAction'\nimport { clearEntireCart } from '../../actions/cartActions'\nimport './Checkout.css'\n\nexport default function Checkout({ subtotal }) {\n  const dispatch = useDispatch()\n  const [animationState, setAnimationState] = useState('')\n  \n  const orderState = useSelector((state) => state.placeOrderReducer)\n  const userState = useSelector(state => state.loginUserReducer)\n  const { currentUser } = userState\n  const { loading, error, success } = orderState\n\n  async function tokenHandler(token) {\n    try {\n      setAnimationState('loading')\n      \n      // Process the order\n      await dispatch(placeOrder(token, subtotal))\n      await dispatch(updateBalance(currentUser.email, subtotal, token))\n      \n      // If order is successful, clear the cart\n      dispatch(clearEntireCart())\n      \n      setAnimationState('success')\n      \n      // Redirect after success animation\n      setTimeout(() => {\n        window.location.href = '/'\n      }, 2000)\n      \n    } catch (error) {\n      console.error('Payment failed:', error)\n      setAnimationState('')\n    }\n  }\n\n  return (\n    <div>\n      {animationState === 'loading' && (\n        <div className=\"loading-animation\"></div>\n      )}\n      \n      {animationState === 'success' && (\n        <div className=\"success-container\">\n          <div className=\"success-animation\">\n            <div className=\"success-checkmark\">\n              <div className=\"check-icon\">\n                <span className=\"icon-line line-tip\"></span>\n                <span className=\"icon-line line-long\"></span>\n                <div className=\"icon-circle\"></div>\n                <div className=\"icon-fix\"></div>\n              </div>\n            </div>\n            <div className=\"success-text\">Payment Successful!</div>\n          </div>\n        </div>\n      )}\n      \n      <div>\n        {!success && !loading && (\n          <StripeCheckout\n            amount={subtotal * 100}\n            shippingAddress\n            token={tokenHandler}\n            currency='BDT'\n            stripeKey='pk_test_51LJdoPD9PVEyJI4UvvDlPGKKTlwUQOYffUqygRZU8snRITH4WQoCGQwsZWEdubhMNfxplKJAlBN4Mdg6BfBMzk0g00ADD0ottW'\n          >\n            <button className='btn_checkout'>Pay Now</button>\n          </StripeCheckout>\n        )}\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}