{"ast":null,"code":"import axios from 'axios';\n\nconst delay = ms => new Promise(res => setTimeout(res, ms));\n\nexport const verifyAdmin = admin => async dispatch => {\n  dispatch({\n    type: 'ADMIN_LOGIN_REQUEST'\n  });\n\n  try {\n    const response = await axios.post('/storeAPI/admin/verifyAdmin', admin);\n    console.log('admin getUID : ', response.data);\n\n    if (response.data.length) {\n      dispatch({\n        type: 'ADMIN_LOGIN_SUCCESS',\n        payload: response.data\n      });\n      localStorage.setItem('currentAdmin', JSON.stringify(response.data));\n      localStorage.removeItem('currentUser');\n      localStorage.removeItem('cartItems');\n      localStorage.removeItem('currentUserUID');\n      await delay(2500);\n      window.location.href = '/';\n    } else {\n      dispatch({\n        type: 'ADMIN_LOGIN_FAILED',\n        payload: response\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: 'ADMIN_LOGIN_FAILED',\n      payload: error\n    });\n  }\n};\nexport const logoutAdmin = () => dispatch => {\n  localStorage.removeItem('currentAdmin');\n  window.location.href = '/admin';\n};\nexport const getAllOrders = () => async dispatch => {\n  dispatch({\n    type: 'GET_All_ORDER_REQ'\n  });\n\n  try {\n    const response = await axios.get('/storeAPI/orders/getAllOrders');\n    console.log(response);\n    dispatch({\n      type: 'GET_All_ORDER_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_All_ORDER_FAILED',\n      payload: error\n    });\n  }\n};\nexport const verifyAOrder = orderid => async dispatch => {\n  dispatch({\n    type: 'VERIFY_A_ORDER_REQ'\n  });\n  console.log(\"Fonrt \", orderid);\n\n  try {\n    const response = await axios.post('/storeAPI/orders/verifyOrder', orderid);\n    console.log(\"FROMNT ENDD \" + response);\n    dispatch({\n      type: 'VERIFY_A_ORDER_SUCCESS',\n      payload: response\n    });\n    await delay(2500);\n    window.location.href = '/orders';\n  } catch (error) {\n    dispatch({\n      type: 'VERIFY_A_ORDER_FAILED',\n      payload: error\n    });\n  }\n};\nexport const updateAdminBalance = (email, amount) => async dispatch => {\n  try {\n    console.log(\"adminAction Up \", email, amount);\n    const accUpdate = await axios.post('/bankAPI/users/updateAdminBalance', {\n      email,\n      amount\n    });\n  } catch (error) {}\n};\nexport const updateBalance = (email, amount, token) => async dispatch => {\n  try {\n    // console.log(\"adminAction Up \",email,amount );\n    const accUpdate = await axios.post('/bankAPI/users/updateBalance', {\n      email,\n      amount,\n      token\n    });\n  } catch (error) {}\n};","map":{"version":3,"sources":["/home/sk-sazid/Downloads/Web Project/frontend/client/src/actions/adminAction.js"],"names":["axios","delay","ms","Promise","res","setTimeout","verifyAdmin","admin","dispatch","type","response","post","console","log","data","length","payload","localStorage","setItem","JSON","stringify","removeItem","window","location","href","error","logoutAdmin","getAllOrders","get","verifyAOrder","orderid","updateAdminBalance","email","amount","accUpdate","updateBalance","token"],"mappings":"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","sourcesContent":["import axios from 'axios'\nconst delay = ms => new Promise(res => setTimeout(res, ms));\n\nexport const verifyAdmin=(admin)=>async dispatch=>{\n\n    dispatch({type:'ADMIN_LOGIN_REQUEST'})\n\n    try{\n        const response=await axios.post('/storeAPI/admin/verifyAdmin', admin)\n        console.log('admin getUID : ',response.data)\n        if(response.data.length ){\n         dispatch({type:'ADMIN_LOGIN_SUCCESS',payload:response.data})\n         localStorage.setItem('currentAdmin',JSON.stringify(response.data))\n         localStorage.removeItem('currentUser');\n         localStorage.removeItem('cartItems');\n         localStorage.removeItem('currentUserUID');\n\n         await delay(2500);\n         window.location.href='/'\n\n        }\n        else { \n            dispatch({type:'ADMIN_LOGIN_FAILED',payload: response})\n\n        }\n    }\n    catch(error){\n        dispatch({type:'ADMIN_LOGIN_FAILED',payload: error})\n    }\n}\n\nexport const logoutAdmin=()=>dispatch=>{\n\n    localStorage.removeItem('currentAdmin');\n    window.location.href='/admin'\n}\n\n\nexport const getAllOrders=()=>async dispatch=>{\n\n    dispatch({type:'GET_All_ORDER_REQ'})\n\n    try {\n        const response = await axios.get('/storeAPI/orders/getAllOrders')\n        console.log(response)\n        dispatch({type:'GET_All_ORDER_SUCCESS', payload: response.data})\n\n    } catch (error) {\n        dispatch({type:'GET_All_ORDER_FAILED' , payload:error})\n    }\n\n}\n\n\nexport const verifyAOrder=(orderid)=>async dispatch=>{\n\n    dispatch({type:'VERIFY_A_ORDER_REQ'})\n    console.log(\"Fonrt \",orderid)\n    try {\n\n        const response = await axios.post('/storeAPI/orders/verifyOrder',orderid);\n        console.log( \"FROMNT ENDD \"+ response)\n        dispatch({type:'VERIFY_A_ORDER_SUCCESS', payload: response})\n        await delay(2500);\n        window.location.href='/orders';\n\n    } catch (error) {\n        dispatch({type:'VERIFY_A_ORDER_FAILED' , payload:error})\n    }\n\n}\n\nexport const updateAdminBalance =(email,amount) => async dispatch=>{\n\n    try {\n        console.log(\"adminAction Up \",email,amount );\n        const accUpdate = await axios.post('/bankAPI/users/updateAdminBalance',{email,amount})\n        \n    } catch (error) {\n        \n    }\n\n}\nexport const updateBalance =(email,amount,token) => async dispatch=>{\n\n    try {\n        // console.log(\"adminAction Up \",email,amount );\n        const accUpdate = await axios.post('/bankAPI/users/updateBalance',{email,amount,token})\n        \n    } catch (error) {\n        \n    }\n\n}"]},"metadata":{},"sourceType":"module"}